table(rules$Agency)
rules<-read.csv("Documents/Political Science/ScheduleCFederalRegister/rules.csv", stringsAsFactors=FALSE, header=TRUE)
head(rules$Agency)
tail(rules$Agency)
rules<-read.csv("Documents/Political Science/ScheduleCFederalRegister/rules.csv", stringsAsFactors=FALSE, header=TRUE)
rules<-read.csv("Documents/Political Science/ScheduleCFederalRegister/rules.csv", stringsAsFactors=FALSE, header=TRUE)
tail(rules$Agency)
rules<-read.csv("Documents/Political Science/ScheduleCFederalRegister/rules.csv", stringsAsFactors=FALSE, header=TRUE)
tail(rules$Agency)
rules$SubAgency[1:10]
rules$SubAgency[350:358]
rules$Agency[350:358]
rules$Summary[350]
rules<-read.csv("Documents/Political Science/ScheduleCFederalRegister/rules.csv", stringsAsFactors=FALSE, header=TRUE)
head(rules$Agency)
tail(rules$Agency)
table(rules$Agency)
sort(table(rules$Agency))
unique(rules$Agency)
length(unique(rules$Agency))
length(unique(rules$SubAgency))
sort(table(rules$Agency))
sort(table(rules$Agency2))
sort(table(rules$Action))
length(unique(rules$Agency))
length(unique(rules$SubAgency))
length(unique(rules$Agency2))
sort(table(rules$Agency2))
colnames(rules)
table(rules$RIN=="None")
tabe(rules$action & rules$RIN=="None")
table(rules$action & rules$RIN=="None")
table(rules$Action & rules$RIN=="None")
table(rules[rules$RIN=="None","Action"])
sort(table(rules[rules$RIN=="None","Action"]))
colnames(rules)
unlist(rules$SubjectList)
sublist=paste(unlist(rules$SubjectList), sep = '', collapse = '')
head(sublist)
sort(table(sublist))
sublist=strsplit(sublist, split=" ")
sublist
sort(table(sublist))
sublist=paste(unlist(rules$SubjectList), sep = '', collapse = '')
sublist=strsplit(sublist, split=",")
sort(table(sublist))
colnames(rules)
load("~/TYP/March82016Workspace2.RData")
library(stringr)
Agency2Cleanup<-c('>', '<', ', \\(.+\\)','\\(.+\\)',"U S "," , US DEPARTMENT OF LABOR", " , US DEPARTMENT OF TRANSPORTATION", ">","; 48 CFR PARTS 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 22, 25, 28, 30, 42, 50, 52, AND 53", " \\[.+\\]","^The ","WAA\\)",", HEALTH AND HUMAN SERVICES", ", Fiscal Service", "\\(EPA"," - ","\\s*$","^\\s*", "US ","^United States "," , US DEPARTMENT OF TRANSPORTATION", "USDA",", Department of Agriculture", "USDA, ","U S ", ", General Services Administration$",",\\s*Department of State",",\\s*Transportation",", DOS", ", DOJ",", DOL",", DHHS", ", State Department", ", United States Department of Commerce", ", Department of the Interior", ", United States Department of Agriculture", ",\\s*Department of the Treasury", ",\\s*Department of Commerce", ",\\s*Department of Health and Human Services", ", GSA", ", FEMA", ", Homeland Security",",\\s*Department of Justice",",\\s*Department of Transportation",",\\s*Department of Defense",",\\s*Department of Education",",\\s*Department of Homeland Security", ",\\s*Department of Energy",",\\s*Department of Labor",", Agriculture",",Commerce", ", Energy", ", Justice", ", Labor", "<",",\\s*DOT","DOT", "Dot",", DoD","DOD", ", USDA", "DHS", ", HHS", ", HUD",", DOE",", Treasury", "\\.", ", Commerce", ", Interior","\xfc\xbe\x8e\x93\xa0\xbc\xfc\xbe\x98\xa6\x90\xbc\xfc\xbe\x8c\xb6\x90\xbc", "T=.+/E$", "\\s+$", ",$","SUTM/SU")
try4<-RemoveChar(Agency2Cleanup, allRules$Agency2)
try4<-gsub("&amp;", "and", try4)
try4<-gsub("UtilitiesService", "Utilities Service", try4)
try4<-gsub("PThe Centers for Medicare", "Centers for Medicare and Medicaid Services", try4)
try4<-gsub("RuralUtilities", "Rural Utilities", try4)
try4<-gsub("BusinessCooperative", "Business-Cooperative", try4)
try4<-gsub("PCenters for Medicare", "Centers for Medicare and Medicaid Services", try4)
try4<-gsub("Postal ServiceE", "Postal Service", try4)
try4<-gsub("General ServicesAdministration", "General Services Administration", try4)
try4<-gsub("AviationAdministration", "Aviation Administration", try4)
#try4<-gsub("administration", "Administration", try4)
try4<-gsub("Government-wide", "Governmentwide", try4)
try4<-gsub("PNational", "National", try4)
try4<-gsub("POffice", "Office", try4)
#try4<-gsub("aviation", "Aviation", try4)
##check this one v
try4<-gsub("PDepartment of Defense , General Services", "Department of Defense; General Services Administration", try4)
try4<-ifelse(try4=="/P", allRules$Agency, try4)
try4<-gsub(" ,", ",", try4)
try4<-toupper(try4)
try4<-ifelse(try4=="NONE", allRules$Agency, try4)
try4<-ifelse(try4=="DEPARTMENT OF DEFENSE", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF THE INTERIOR", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF TRANSPORTATION", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF HEALTH AND HUMAN SERVICES", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF THE TREASURY", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF AGRICULTURE", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF JUSTICE", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF HOMELAND SECURITY", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF COMMERCE", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF EDUCATION", allRules$SubAgency, try4)
try4<-ifelse(try4=="DEPARTMENT OF LABOR", allRules$SubAgency, try4)
try4<-ifelse(try4=="None", allRules$Agency, try4)
for(i in 1:length(try4)){
if(try4[i]=="OFFICE OF THE SECRETARY"){
try4[i]=str_c("OFFICE OF THE SECRETARY", str_extract(pattern="OF.*$", allRules$Agency[i]), sep=' ')
}
}
for(i in 1:length(try4)){
if(try4[i]=="Office of the Secretary"){
try4[i]=str_c("OFFICE OF THE SECRETARY", str_extract(pattern="OF.*$", allRules$Agency[i]), sep=' ')
}
}
for(i in 1:length(try4)){
if(try4[i]=="OFFICE OF INSPECTOR GENERAL"){
try4[i]=str_c("OFFICE OF INSPECTOR GENERAL", str_extract(pattern="OF.*$", allRules$Agency[i]), sep=' ')
}
}
##0 idea if this worked
for(i in 1:length(try4)){
if(try4[i]=="OFFICE OF THE INSPECTOR GENERAL"){
try4[i]=str_c("OFFICE OF INSPECTOR GENERAL", ifelse(is.na(str_extract(pattern="OF.*$", allRules$Agency[i])),allRules$Agency[i],str_extract(pattern="OF.*$", allRules$Agency[i])), sep=' ')
}
}
RulesNames<-data.frame(AgencyNames=toupper(try4), stringsAsFactors=FALSE) ##need as dataframe to merge
###Load in the Apts Data
setwd("~/TYP")
Apts<-read.csv("Sept98thru13Apts.csv", stringsAsFactors=FALSE)
###############################################
##find all columns with Agency in title
ind<-grep("Agency", colnames(Apts))
##Find which ones are not NA and use that for the row
Agency<-character(nrow(Apts))
for(i in 1:length(Agency)){
Agency[i]<-na.omit(unlist(Apts[i,ind]))[1]
}
Apts$Agency<-Agency
##Remove extra columns
Apts<-Apts[,-ind]
##Splitting out the code from the agency
Split<-unlist(str_split(Apts$Agency, "^[A-Z]{2}.{2}-"))
##Creating an index for selecting every other item
Index<-seq(from=2, to=length(Split), by=2)
AgencyNames<-Split[Index] ##Use the index
####This is to deal with agencies that exist under multiple codes. Below they were multiplying
Apts$id[Apts$id=="TD02"]<-"HSAC" ##change the code for pre-2003 coast guard to HSAC from TD02
Apts$id[Apts$id=="EM00"]<-"HSCB" ##change FEMA from old code to curreny HSCB
Apts$id[Apts$id=="HF00"]<-"HFHA" ##change pre-2012 federal housing finance agency to current HFHA instead of HF00
Apts$id[Apts$id=="TD19"]<-"HSBC" ##change pre-2003 code to current code. I wonder if this will be problematic later? TSA
Apts$id[Apts$id=="LT00"]<-"JL03" ##change pre-2013 code to 2013 code for the tax court
Apts$id[Apts$id=="TRAC"]<-"HSAD" ##change pre-2003 code to current code for secret service
Apts$id[Apts$id=="AMPC"]<-"GB00" ##change to current code for overseas private investment corporation
Apts$id[Apts$id=="ARXM"]<-"ARAT" ##Army test and evaluation command changed to newer code
Apts$id[Apts$id=="AGHS"]<-"AGHL" ##Homeland security staff 04 to 08 code replaced with 09-code
Apts$id[Apts$id=="DLPW"]<-"DLEB" ##Employee Benefits security administration
Apts$Agency2<-AgencyNames ##set an agency2 variable to be equal to the new agencynames variable
##Setting all of the unspecified workers to include the name of the respective agency
##These agencies shared names with other agencies in different departments, which is why I'm doing this.
Apts$Agency2[Apts$Agency2=="UNSPECIFIED"]<-c("UNSPECIFIED BATTLE MONUMENTS COMMISSION", "UNSPECIFIED AIR FORCE", "UNSPECIFIED AGRICULTURE", "UNSPECIFIED ARMY", "UNSPECIFIED DEPARTMENT OF DEFENSE","UNSPECIFIED DEPARTMENT OF JUSTICE", "UNSPECIFIED DEPARTMENT OF LABOR", "UNSPECIFIED GENERAL SERVICE ADMINISTRATION", 'UNSPECIFIED DEPARTMENT OF HEALTH AND HUMAN SERVICES', "UNSPECIFIED DEPARTMENT OF HOMELAND SECURITY", 'UNSPECIFIED DEPARTMENT OF HOUSING AND URBAN DEVELOPMENT',"UNSPECIFIED DEPARTMENT OF THE TREASURY", "UNSPECIFIED DEPARTMENT OF VETERANS AFFAIRS")
Apts$Agency2[Apts$Agency2=="OFFICE OF THE INSPECTOR GENERAL"]<-c("OFFICE OF INSPECTOR GENERAL OF AGRICULTURE", "OFFICE OF INSPECTOR GENERAL OF COMMERCE", "OFFICE OF INSPECTOR GENERAL OF DEFENSE", "OFFICE OF INSPECTOR GENERAL OF JUSTICE", "OFFICE OF INSPECTOR GENERAL OF LABOR", "OFFICE OF INSPECTOR GENERAL OF HOMELAND SECURITY", "OFFICE OF INSPECTOR GENERAL OF INTERIOR")
Apts$Agency2[Apts$Agency2=="OFFICE OF INSPECTOR GENERAL"]<-c("OFFICE OF INSPECTOR GENERAL OF EDUCATION", "OFFICE OF INSPECTOR GENERAL OF GENERAL SERVICES ADMINISTRATION", "OFFICE OF INSPECTOR GENERAL OF HOUSING FINANCE", "OFFICE OF INSPECTOR GENERAL OF HOUSING AND URBAN DEVELOPMENT", "OFFICE OF INSPECTOR GENERAL OF TRANSPORTATION", "OFFICE OF INSPECTOR GENERAL OF THE TREASURY")
Apts$Agency2[Apts$Agency2=="OFFICE OF THE CHIEF FINANCIAL OFFICER"]<-c("OFFICE OF THE CHIEF FINANCIAL OFFICER OF AGRICULTURE", "OFFICE OF THE CHIEF FINANCIAL OFFICER OF LABOR", "OFFICE OF THE CHIEF FINANCIAL OFFICER OF EDUCATION", "OFFICE OF THE CHIEF FINANCIAL OFFICER OF GENERAL SERVICES ADMINISTRATION", "OFFICE OF THE CHIEF FINANCIAL OFFICER OF HOUSING AND URBAN DEVELOPMENT")
Apts$Agency2[Apts$Agency2=="OFFICE OF THE CHIEF INFORMATION OFFICER"]<-c("OFFICE OF THE CHIEF INFORMATION OFFICER OF AGRICULTURE", "OFFICE OF THE CHIEF INFORMATION OFFICER OF EDUCATION", "OFFICE OF THE CHIEF INFORMATION OFFICER FOR GENERAL SERVICES ADMINISTRATION", "OFFICE OF THE CHIEF INFORMATION OFFICER FOR HOUSING AND URBAN DEVELOPMENT")
Apts$Agency2[Apts$Agency2=="OFFICE OF THE SOLICITOR"]<-c("OFFICE OF THE SOLICITOR OF LABOR", "OFFICE OF THE SOLICITOR OF INTERIOR")
Apts$Agency2[Apts$Agency2=="OFFICE OF THE SECRETARY"]<-c("OFFICE OF THE SECRETARY OF COMMERCE", "OFFICE OF THE SECRETARY OF VETERANS AFFAIRS")
Apts$Agency2[Apts$Agency2=="OFFICE OF THE GENERAL COUNSEL"]<-c("OFFICE OF THE GENERAL COUNSEL OF AGRICULTURE", "OFFICE OF THE GENERAL COUNSEL OF EDUCATION")
Apts$Agency2[Apts$Agency2=="OFFICE OF GENERAL COUNSEL"]<-c("OFFICE OF THE GENERAL COUNSEL OF GENERAL SERVICES ADMINISTRATION", "OFFICE OF THE GENERAL COUNSEL OF HOUSING AND URBAN DEVELOPMENT")
Apts$Agency2[Apts$Agency2=="OFFICE OF CONGRESSIONAL AND INTERGOVERNMENTAL AFFAIRS"]<-c("OFFICE OF CONGRESSIONAL AND INTERGOVERNMENTAL AFFAIRS DEPARTMENT OF LABOR", "OFFICE OF CONGRESSIONAL AND INTERGOVERNMENTAL AFFAIRS GENERAL SERVICES ADMINISTRATION")
Apts$Agency2[Apts$Agency2=="BOARD OF CONTRACT APPEALS"]<-c("BOARD OF CONTRACT APPEALS DEPARTMENT OF AGRICULTURE", "BOARD OF CONTRACT APPEALS DEPARTMENT OF VETERANS AFFAIRS")
NamesIds<-as.data.frame(cbind(AgencyNames=Apts$Agency2, Apts$id), stringsAsFactors=FALSE) ##put names and ids together
NamesIds<-unique(NamesIds)
##Check that all of these are 1
sort(table(NamesIds$AgencyNames))
##Renaming a few agencies for easier merging
RulesNames$AgencyNames<-gsub("BUREAU OF ALCOHOL, TOBACCO AND FIREARMS", "BUREAU OF ALCOHOL, TOBACCO, FIREARMS, AND EXPLOSIVES",RulesNames$AgencyNames)
NamesIds$AgencyNames<-gsub("^INDIAN AFFAIRS", "BUREAU OF INDIAN AFFAIRS", NamesIds$AgencyNames)
RulesNames$AgencyNames<-gsub("^INDIAN AFFAIRS", "BUREAU OF INDIAN AFFAIRS", RulesNames$AgencyNames)
NamesIds$AgencyNames<-gsub("^NAT ", "NATIONAL ", NamesIds$AgencyNames)
NamesIds$AgencyNames<-gsub("CMSN", "COMMISSION", NamesIds$AgencyNames)
RulesNames$AgencyNames<-gsub(", EMERGENCY PREPAREDNESS AND RESPONSE DIRECTORATE", "", RulesNames$AgencyNames) ##THis is just the divisiion fema is in
RulesNames$AgencyNames<-gsub("OFFICE OF THE ASSISTANT SECRETARY FOR HOUSING-FEDERAL HOUSING COMMISSIONER" , "ASSISTANT SECRETARY FOR HOUSING--FEDERAL HOUSING COMMISSIONER", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF THE ASSISTANT SECRETARY FOR HOUSING, FEDERAL HOUSING COMMISSIONER" , "ASSISTANT SECRETARY FOR HOUSING--FEDERAL HOUSING COMMISSIONER", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF THE ASSISTANT SECRETARY FOR HOUSINGFEDERAL HOUSING COMMISSIONER" , "ASSISTANT SECRETARY FOR HOUSING--FEDERAL HOUSING COMMISSIONER", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF THE ASSISTANT SECRETARY OF HOUSINGFEDERAL HOUSING COMMISSIONER" , "ASSISTANT SECRETARY FOR HOUSING--FEDERAL HOUSING COMMISSIONER", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("DEPARTMENT OF TRANSPORTATION, OFFICE OF THE SECRETARY" , "OFFICE OF THE SECRETARY OF TRANSPORTATION ", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("CUSTOMS AND BORDER PROTECTION;", "CUSTOMS AND BORDER PROTECTION", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("NATIONAL MARINE FISHERIES SERVICE -", "NATIONAL MARINE FISHERIES SERVICE", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("NATIONAL MARINE FISHERIES SERVICE , NOAA", "NATIONAL MARINE FISHERIES SERVICE", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("DEFENSE,NATIONAL", "DEFENSE, NATIONAL", RulesNames$AgencyNames)
##Formerly Customs service, now customs and border protection
RulesNames$AgencyNames<-gsub("CUSTOMS SERVICE", "CUSTOMS AND BORDER PROTECTION", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("/SUBAGYSUBAGY", ";", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OMB", "OFFICE OF MANAGEMENT AND BUDGET", RulesNames$AgencyNames)
NamesIds$AgencyNames<-gsub("U.S. ", "", NamesIds$AgencyNames)
RulesNames$AgencyNames<-gsub("^US ", "", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF SURFACE MINING RECLAMATION AND ENFORCEMENT", "OFFICE OF SURFACE MINING, RECLAMATION AND ENFORCEMENT", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("HARRY S TRUMAN", "HARRY S. TRUMAN", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFCOMMERCE", "OF COMMERCE", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF THE DOD CHIEF INFORMATION OFFICER", "OFFICE OF THE CHIEF INFORMATION OFFICER OF DEFENSE", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF THE SECRETARY, DEPARTMENT OF HOUSING AND URBAN DEVELOPMENT", "OFFICE OF THE SECRETARY OF HOUSING AND URBAN DEVELOPMENT", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("CENTERS FOR MEDICARE AND MEDICAID SERVICES", "CENTERS FOR MEDICARE & MEDICAID SERVICES", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("STATE DEPARTMENT\\s?", "DEPARTMENT OF STATE", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("CUSTOMS AND BORDER PROTECTION DEPARTMENT OF THE TREASURY", "CUSTOMS AND BORDER PROTECTION", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("OFFICE OF GOVERNMENTWIDE POLICY, GENERAL SERVICES ADMINISTRATION", "OFFICE OF GOVERNMENTWIDE POLICY", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("PRIVACY OFFICE", "OFFICE OF THE SECRETARY OF HOMELAND SECURITY", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub(", ;",";", RulesNames$AgencyNames)
RulesNames$AgencyNames<-gsub("COAST GUARD;", "COAST GUARD", RulesNames$AgencyNames)
NamesIds$AgencyNames<-gsub("BUREAU OF PRISONS/FEDERAL PRISON SYSTEM", "BUREAU OF PRISONS", NamesIds$AgencyNames)
NamesIds$AgencyNames<-gsub("ASSISTANT SECRETARY FOR COMMUNITY PLANNING AND DEVELOPMENT", "OFFICE OF THE ASSISTANT SECRETARY FOR COMMUNITY PLANNING AND DEVELOPMENT", NamesIds$AgencyNames)
NamesIds$AgencyNames<-gsub("ASSISTANT SECRETARY FOR PUBLIC AND INDIAN HOUSING","OFFICE OF THE ASSISTANT SECRETARY FOR PUBLIC AND INDIAN HOUSING", NamesIds$AgencyNames)
NamesIds<-rbind(NamesIds, c("POSTAL SERVICE", "POST")) ##No personnel data on this
NamesIds<-rbind(NamesIds, c("POSTAL REGULATORY COMMISSION", "POSTREG")) ##no personnel data on this
NamesIds<-rbind(NamesIds, c("POSTAL RATE COMMISSION", "POSTRATE")) ##no personnel data on this
NamesIds<-rbind(NamesIds, c("ADMINISTRATION ON CHILDREN, YOUTH AND FAMILIES", "HE90")) ##Within ACF
NamesIds<-rbind(NamesIds, c("FEDERAL CROP INSURANCE CORPORATION", "AG08"))
NamesIds<-rbind(NamesIds, c("BOARD OF GOVERNORS OF THE FEDERAL RESERVE SYSTEM", "FEDBG"))
NamesIds<-rbind(NamesIds, c("NATIONAL MARINE FISHERIES SERVICE", "CM54")) ##inside of NOAA
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF DEFENSE", "DD01")) ##setting all DOD ones not specified to secretary office
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF LABOR", "DLAA")) ##setting all DL ones not specified to secretary office
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF VETERANS AFFAIRS", "VAAA")) ##setting all VA ones to the secretary office
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF DEFENSE , AND DEPARTMENT OF VETERANS AFFAIRS", "DD01 AND VAAA")) ##could later search for all those that *include* DD01
NamesIds<-rbind(NamesIds, c("OFFICE OF THE ASSISTANT SECRETARY OF DEFENSE", "DD01")) ##ast secretary in secretary office
######Minerals Management Service was split into three agencies after deepwater horizon for awhile, it was renamed Bureau of Ocean Energy Management, regulation, and enforcement IN23
NamesIds<-rbind(NamesIds, c("MINERALS MANAGEMENT SERVICE", "IN23"))
NamesIds<-rbind(NamesIds, c("BUREAU OF CONSULAR AFFAIRS", "ST00"))##in state department
##The programs funded through Commodity Credit Corporation are administered by employees of the Farm Service Agency and the Foreign Agricultural Service. It has no staff of its own.
NamesIds<-rbind(NamesIds, c("COMMODITY CREDIT CORPORATION", "AGFA AND AG10"))
NamesIds<-rbind(NamesIds,c("DEPARTMENT OF DEFENSE, NATIONAL AERONAUTICS AND SPACE ADMINISTRATION", "DD01 AND NN00"))
NamesIds<-rbind(NamesIds, c("OFFICE OF ENERGY EFFICIENCY AND RENEWABLE ENERGY", "DN00")) ##because energy has only the main department
NamesIds<-rbind(NamesIds, c("DEFENSE ACQUISITION REGULATIONS SYSTEM", "DD63")) ##because the acqusition regulations board is within the defense contract management agency according to the plum book
NamesIds<-rbind(NamesIds, c("COPYRIGHT OFFICE, LIBRARY OF CONGRESS", "LIBCONG")) #no code for this one
NamesIds<-rbind(NamesIds, c("COPYRIGHT ROYALTY BOARD, LIBRARY OF CONGRESS", "LIBCONG2")) #no code for this one
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF THE NAVY", "NV08")) #tagged as the office of sec navy
NamesIds<-rbind(NamesIds, c("RESEARCH AND SPECIAL PROGRAMS ADMINISTRATION", "TD11")) ##tagged this way because this agency was housed within the office of research, development, and technology (TD11)
NamesIds<-rbind(NamesIds, c("FOREST SERVICE; FISH AND WILDLIFE SERVICE", "AG11 AND IN15"))
NamesIds<-rbind(NamesIds, c("HEALTH CARE FINANCING ADMINISTRATION", "HE70")) ##this got renamed to the center for medicare and medicaid services
NamesIds<-rbind(NamesIds, c("GENERAL SERVICES ADMINISTRATION;NATIONAL AERONAUTICS AND SPACE ADMINISTRATION", "GS00 AND NN00"))
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF HOMELAND SECURITY", "HSAA")) ##setting general dhs to dhs hq
NamesIds<-rbind(NamesIds, c("OFFICE OF THE SECRETARY OF HOMELAND SECURITY", "HSAA")) ##Same as above
NamesIds<-rbind(NamesIds, c("OFFICE OF THE ATTORNEY GENERAL", "ATTGEN")) ##setting general dhs to dhs hq
NamesIds<-rbind(NamesIds, c("FEDERAL EMERGENCY MANAGEMENT AGENCY , MITIGATION DIVISION", "HSCB")) ##setting FEMA, Mitigation division to FEMA
NamesIds<-rbind(NamesIds, c("OFFICE OF FOREIGN ASSETS CONTROL", "OFAC")) ##doesn't seem to have a match
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF THE ARMY", "ARSA"))##setting department of army to secretary of army
NamesIds<-rbind(NamesIds, c("LEGAL SERVICES CORPORATION", "LEGSERVCORPS"))##legal services corporation doesn't seem to have a match
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF HEALTH AND HUMAN SERVICES", "HE10")) ##setting to secretary
NamesIds<-rbind(NamesIds, c("DEPARTMENT OF EDUCATION", "EDEA")) ##setting to secretary
NamesIds<-rbind(NamesIds, c("NATIONAL MARINE FISHERIES SERVICE, NATIONAL OCEANIC AND ATMOSPHERIC ADMINISTRATION", "CM54")) ##marine fisheries is within NOAA
RulesNames$AgencyNames<-RemoveChar(' $', RulesNames$AgencyNames) ##Removing unnecessary spaces
allRules2<-allRules ##testing on a copy
allRules2$Agency2<-RulesNames$AgencyNames ##setting agency2 to be the same as the RulesNamesAgencyNames
mergetrial<-merge(allRules2,NamesIds, by.x="Agency2", by.y="AgencyNames")
DateSplitter<-function(string){
DateStrings<-str_extract(string, '[0-9]{4}-[0-9]+-[0-9]+')
Year<-str_extract(DateStrings, '[0-9]{4}')
return(data.frame(DateStrings, Year))
}
##add date and year
mergetrial<-cbind(mergetrial, DateSplitter(mergetrial$Date))
##may need to change this to id later from V2
RulesByYearAgencyCode<-as.data.frame(table(mergetrial$V2,mergetrial$Year), stringsAsFactors=FALSE)
colnames(RulesByYearAgencyCode)<-c("AgencyCode", "Year", "NumberRules")
RulesByYearAgencyCode$Year<-as.numeric(RulesByYearAgencyCode$Year)
Apts[grep(x=colnames(Apts), pattern="13")]
AptsX<-Apts[c(grep(x=colnames(Apts), pattern="98"),2,344)]
AptsX$Year<-1998
##Will need 2012 and 2013
colnames(Apts)
for(i in 1:13){
nums<-c("99", "00","01","02","03","04","05","06","07","08","09","10","11")
years<-c(1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011)
AptsY<-Apts[c(grep(x=colnames(Apts), pattern=nums[i]), 2,344)]
AptsY$Year<-years[i]
colnames(AptsY)<-colnames(AptsX)
AptsX<-rbind(AptsX, AptsY)
}
AptsX$NP.ES.SCD98<-NA
AptsX$P.ES.SCD98<-NA
for(i in 1:2){
nums<-c("12","13")
years<-c(2012, 2013)
AptsY<-Apts[c(grep(x=colnames(Apts), pattern=nums[i]), 2,344)]
AptsY$Year<-years[i]
colnames(AptsY)<-gsub("12", "98", colnames(AptsY))
colnames(AptsY)<-gsub("13", "98", colnames(AptsY))
AptsX<-rbind(AptsX, AptsY)
}
##Doing this for the purposes of merging below.
colnames(AptsX)[23]<-"AgencyName"
colnames(AptsX)[22]<-"AgencyCode"
####Apts X now has all the data from Apts in long format instead of wide.
AptsAndRulesByYear<-merge(RulesByYearAgencyCode, AptsX)
library(MASS)
AptsAndRulesByYear$AptsThousands<-(AptsAndRulesByYear$Total.Appts98)/1000
AptsAndRulesByYear$President<-ifelse(AptsAndRulesByYear$Year<2009, "Bush", "Obama")
summary(glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President, data=AptsAndRulesByYear))
save.image("~/TYP/March162016Workspace.RData")
AptsAndRulesByYear$Divided<-ifelse((AptsAndRulesByYear$Year>2006 & AptsAndRulesByYear$Year<2009)|AptsAndRulesByYear$Year>2010, 1,0)
summary(glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear))
Apts$id[Apts$Agency2=="FEDERAL AVIATION ADMINISTRATION"]
AptsAndRulesByYear$AgencyCode[AptsAndRulesByYear$AgencyName=="FEDERAL AVIATION ADMINISTRATION"]
AptsAndRulesByYear$FAA<-ifelse(AptsAndRulesByYear$AgencyName=="FEDERAL AVIATION ADMINISTRATION", 1,0)
AptsAndRulesByYear$FAA<-ifelse(AptsAndRulesByYear$AgencyName=="ENVIRONMENTAL PROTECTION AGENCY", 1,0)
AptsAndRulesByYear$FAA<-ifelse(AptsAndRulesByYear$AgencyName=="FEDERAL AVIATION ADMINISTRATION", 1,0)
AptsAndRulesByYear$EPA<-ifelse(AptsAndRulesByYear$AgencyName=="ENVIRONMENTAL PROTECTION AGENCY", 1,0)
summary(glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+EPA+FAA, data=AptsAndRulesByYear))
summary(glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+EPA, data=AptsAndRulesByYear))
summary(glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+FAA, data=AptsAndRulesByYear))
summary(glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear))
library(sandwich)
library(lmtest)
library(multiwayvcov)
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
coeftest(Model1, vcov=function(x) cluster.vcov(x, na.omit(AptsAndRulesByYear)$AgencyCode))
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=na.omit(AptsAndRulesByYear))
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+EPA+FAA, data=AptsAndRulesByYear)
coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+EPA, data=AptsAndRulesByYear)
coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected<-coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model2<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+EPA+FAA, data=AptsAndRulesByYear)
ModelCorrected2<-coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
Model2
colnames(AptsAndRulesByYear)
Model2<-glm.nb(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
Model2
summary(Model2)
ModelCorrected2<-coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
ModelCorrected2<-coeftest(Model2, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
Model2<-glm.nb(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+CD.CareerCond98+P.ES.SCA98+P.ES.SCB98+ES.Exec98+NP.SES.LimEmerg98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
ModelCorrected2<-coeftest(Model2, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
Model2<-glm.nb(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCB98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
ModelCorrected2<-coeftest(Model2, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
Model2<-glm.nb(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
ModelCorrected2<-coeftest(Model2, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
library("stargazer", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
hist(AptsAndRulesByYear$NumberRules)
hist(AptsAndRulesByYear$NumberRules, 50)
Model2<-zeroinfl(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided|1, data=AptsAndRulesByYear)
library(pscl)
Model2<-zeroinfl(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided|1, data=AptsAndRulesByYear)
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided|1, data=AptsAndRulesByYear)
Model1ZeroInfl
summary(Model1ZeroInfl)
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+EPA|1, data=AptsAndRulesByYear)
summary(Model1ZeroInfl)
coeftest(Model1ZeroInfl, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+SES.NonCareer98|1, data=AptsAndRulesByYear)
summary(Model1ZeroInfl)
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+SES.NonCareer98+SES.+SES.Career98|1, data=AptsAndRulesByYear)
summary(Model1ZeroInfl)
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+SES.NonCareer98|1, data=AptsAndRulesByYear)
summary(Model1ZeroInfl)
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
Model1ZeroInfl<-zeroinfl(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided+SES.NonCareer98|1, data=AptsAndRulesByYear)
summary(Model1ZeroInfl)
coeftest(Model1ZeroInfl, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected<-coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model2<-glm.nb(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
ModelCorrected2<-coeftest(Model2, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
stargazer(ModelCorrected, Model1)
stargazer(ModelCorrected2, Model2)
stargazer(Model1ZeroInfl)
Model<-glm.nb(NumberRules~0+Year+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided)
head(AptsAndRulesByYear)
Model<-glm.nb(NumberRules~0+Year+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
head(Model)
summary(Model)
Model<-glm.nb(NumberRules~0+as.factor(Year)+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
summary(Model)
Model<-glm.nb(NumberRules~0+as.factor(AgencyCode)+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
summary(Model)
coeftest(Model, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model<-glm.nb(NumberRules~0+as.factor(AgencyCode)+as.factor(year)+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
Model<-glm.nb(NumberRules~0+as.factor(AgencyCode)+as.factor(Year)+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
coeftest(Model, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
AptsAndRulesByYear$President[AptsAndRulesByYear$Year==2000]
AptsAndRulesByYear$President[AptsAndRulesByYear$Year==2000]<-"Clinton"
Model1<-glm.nb(NumberRules~NP.ES.SCC98+AptsThousands+President+Divided, data=AptsAndRulesByYear)
ModelCorrected<-coeftest(Model1, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected
Model<-glm.nb(NumberRules~0+as.factor(AgencyCode)+as.factor(Year)+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
coeftest(Model, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
Model2<-glm.nb(NumberRules~NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98)+AptsThousands+President+Divided, data=AptsAndRulesByYear)
ModelCorrected2<-coeftest(Model2, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
ModelCorrected2
Model<-glm.nb(NumberRules~0+as.factor(AgencyCode)+as.factor(Year)+NP.ES.SCC98+SES.NonCareer98+SES.Career98+CS.Career98+(P.ES.SCA98+NP.ES.SCA98)+(P.ES.SCB98+NP.ES.SCB98), data=AptsAndRulesByYear)
coeftest(Model, vcov=function(x) cluster.vcov(x, AptsAndRulesByYear$AgencyCode))
summary(Model)
plot(y=AptsAndRulesByYear$NumberRules, x=Apts and Rules By Year$Year)
plot(y=AptsAndRulesByYear$NumberRules, x=AptsandRulesByYear$Year)
plot(y=AptsAndRulesByYear$NumberRules, x=AptsAndRulesByYear$Year)
sum(AptsAndRulesByYear[AptsAndRulesByYear$Year==2000,]$NumberRules)
library(plyr)
llply(1:14, .fun=function(x) sum(AptsAndRulesByYear[AptsAndRulesByYear$Year==x,]$NumberRules))
laply(1:14, .fun=function(x) sum(AptsAndRulesByYear[AptsAndRulesByYear$Year==x,]$NumberRules))
laply(2000:2013, .fun=function(x) sum(AptsAndRulesByYear[AptsAndRulesByYear$Year==x,]$NumberRules))
sum(laply(2000:2013, .fun=function(x) sum(AptsAndRulesByYear[AptsAndRulesByYear$Year==x,]$NumberRules)))
sum(laply(2000:2015, .fun=function(x) sum(AptsAndRulesByYear[AptsAndRulesByYear$Year==x,]$NumberRules)))
colnames(RulesByYearAgencyCode)
sum(laply(2000:2015, .fun=function(x) sum(RulesByYearAgencyCode[RulesByYearAgencyCode$Year==x,]$NumberRules)))
laply(2000:2015, .fun=function(x) sum(RulesByYearAgencyCode[RulesByYearAgencyCode$Year==x,]$NumberRules))
TotalRulesByYear<-laply(2000:2015, .fun=function(x) sum(RulesByYearAgencyCode[RulesByYearAgencyCode$Year==x,]$NumberRules))
plot(TotalRulesByYear~2000:2015)
plot(y=TotalRulesByYear, x=2000:2015)
nrules<-c(length(grep("2000", allRules$Date)),length(grep("2001", allRules$Date)),length(grep("2002", allRules$Date)),
length(grep("2003", allRules$Date)),length(grep("2004", allRules$Date)),length(grep("2005", allRules$Date)),length(grep("2006",allRules$Date)),
length(grep("2007", allRules$Date)),length(grep("2008", allRules$Date)),length(grep("2009", allRules$Date)),length(grep("2010", allRules$Date)),
length(grep("2011", allRules$Date)),length(grep("2012", allRules$Date)),length(grep("2013", allRules$Date)),
length(grep("2014", allRules$Date)),length(grep("2015", allRules$Date)))
plot(y=nrules, x=2000:2015, ylim=c(0,4500), type="l",lwd=2,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time")
points(y=nrules, x=2000:2015, pch=19)
plot(y=TotalRulesByYear, x=2000:2015, ylim=(0,4000), pch=20)
plot(y=TotalRulesByYear, x=2000:2015, ylim=(0:4000), pch=20)
plot(y=TotalRulesByYear, x=2000:2015, ylim=x(0,4000), pch=20)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4000), pch=20)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500), pch=20)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500), pch=20)
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=nrules, x=2000:2015, ylim=c(0,4500), type="l",lwd=2,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time")
points(y=nrules, x=2000:2015, pch=19)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500), pch=20)
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=nrules, x=2000:2015, ylim=c(0,4500), type="l",lwd=2,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time")
points(y=nrules, x=2000:2015, pch=20)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500), pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time")
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlab=c(2000,2015), pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time")
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015), pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time")
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015), pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015), pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
lines(y=TotalRulesByYear, x=2000:2015)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxs="r", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxs="i", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxs="s", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxs="e", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxt="n", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
axis(1, at=2000:2015)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxt="n", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
axis(1, at=2000:2015, cex=.7)
plot(y=TotalRulesByYear, x=2000:2015, ylim=c(0,4500),xlim=c(2000,2015),xaxt="n", pch=20,ylab="Number of Rules", xlab="Year", main="Number of Rules Over Time", cex.axis=0.7, cex.lab=0.7)
axis(1, at=2000:2015, cex.axis=.7)
lines(y=TotalRulesByYear, x=2000:2015)
mean(nrules)
lines(y=nrules, x=2000:2015)
colnames(RulesByYearAgencyCode)
colnames(mergetrial)
sort(table(mergetrial$Action))
head(gsub(".", "", mergetrial$Action))
gsub(".", "", mergetrial$Action)
head(mergetrial$Action)
)
gsub(".", "", head(mergetrial$Action)
)
gsub("\\.", "", head(mergetrial$Action))
mergetrial$Action<-gsub("\\.", "", mergetrial$Action)
mergetrial$Action<-toupper(mergetrial$Action)
mergetrial$Action<-gsub("\\.", "", mergetrial$Action)
mergetrial$Action<-gsub("RULES", "RULE", mergetrial$Action)
sort(table(mergetrial$Action))
table(mergetrial$V2)
mergetrial[mergetrial$Action=="FINAL RULE",]
table(mergetrial[mergetrial$Action=="FINAL RULE",])
table(mergetrial[mergetrial$Action=="FINAL RULE",]$V2)
head(table(mergetrial[mergetrial$Action=="FINAL RULE",]$V2))
head(table(mergetrial[mergetrial$Action=="FINAL RULE",]$V2))
head(table(mergetrial$V2))
sort(table(mergetrial$Action))
head(table(mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS"),]$V2))
head(table(mergetrial$V2))
FinalRulesByYearAgencyCode<-as.data.frame(table(mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS"),]$V2, mergetrial$Year), stringsAsFactors=FALSE)
table(mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS"),]$V2, mergetrial$Year)
FinalRulesByYearAgencyCode<-as.data.frame(table(mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS"),]$V2, mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS"),]$Year), stringsAsFactors=FALSE)
table(mergetrial$RIN=="None")
table(mergetrial$RIN=="NONE")
FinalRulesWithRINByYearAgencyCode<-as.data.frame(table(mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS")& mergetrial$RIN!="None",]$V2, mergetrial[(mergetrial$Action=="FINAL RULE"|mergetrial$Action=="FINAL RULE; REQUEST FOR COMMENTS")& mergetrial$RIN!="None",]$Year), stringsAsFactors=FALSE)
head(FinalRulesWithRINByYearAgencyCode)
head(FinalRulesWithRINByYearAgencyCode,40)
colnames(FinalRulesByYearAgencyCode)<-c("AgencyCode", "Year", "NumberRules")
colnames(FinalRulesWithRINByYearAgencyCode)<-c("AgencyCode", "Year", "NumberRules")
FinalRulesByYearAgencyCode$Year<-as.numeric(FinalRulesByYearAgencyCode$Year)
FinalRulesWithRINByYearAgencyCode$Year<-as.numeric(FinalRulesWithRINByYearAgencyCode$Year)
AptsAndFinalRulesByYear<-merge(FinalRulesByYearAgencyCode, AptsX)
####merging using final rules with RINs
AptsAndFinalRulesWithRINByYear<-merge(FinalRulesWithRINByYearAgencyCode, AptsX)
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$NP.ES.SCC98, use="pairwise.complete.obs") ##.04
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$SES.NonCareer98, use="pairwise.complete.obs") ##.11
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$SES.Career98, use="pairwise.complete.obs") ##.22
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$Total.Appts98, use="pairwise.complete.obs") ##.3 for all apts
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$Total.NonPermanent98, use="pairwise.complete.obs") #.07 nonperm
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$Total.Permanent98, use="pairwise.complete.obs") #.303 for perm
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$CS.Career98, use="pairwise.complete.obs") #.1 for career
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$NP.ES.SCC98, use="pairwise.complete.obs") ##.04
head(AptsAndFinalRulesByYear)
head(FinalRulesByYearAgencyCode)
head(FinalRulesWithRINByYearAgencyCode)
head(AptsX)
class(FinalRulesByYearAgencyCode)
class(FinalRulesByYearAgencyCode$Year)
class(FinalRulesByYearAgencyCode$NumberRules)
class(FinalRulesByYearAgencyCode$AgencyCode)
class(FinalRulesWithRINByYearAgencyCode$AgencyCode)
AptsAndFinalRulesByYear<-merge(FinalRulesByYearAgencyCode, AptsX)
head(AptsAndFinalRulesByYear,10)
head(AptsAndFinalRulesByYear,20)
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$NP.ES.SCC98, use="pairwise.complete.obs") ##.04
cor(AptsAndFinalRulesByYear$NumberFinalRules, AptsAndFinalRulesByYear$SES.NonCareer98, use="pairwise.complete.obs") ##.11
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$SES.NonCareer98, use="pairwise.complete.obs") ##.11
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$SES.Career98, use="pairwise.complete.obs") ##.22
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$Total.Appts98, use="pairwise.complete.obs") ##.3 for all apts
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$Total.NonPermanent98, use="pairwise.complete.obs") #.07 nonperm
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$Total.Permanent98, use="pairwise.complete.obs") #.303 for perm
cor(AptsAndFinalRulesByYear$NumberRules, AptsAndFinalRulesByYear$CS.Career98, use="pairwise.complete.obs") #.1 for career
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$NP.ES.SCC98, use="pairwise.complete.obs") ##.037
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$SES.NonCareer98, use="pairwise.complete.obs") ##.09
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$SES.Career98, use="pairwise.complete.obs") ##.13
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$Total.Appts98, use="pairwise.complete.obs") ##.27 for all apts
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$Total.NonPermanent98, use="pairwise.complete.obs") #.07 nonperm
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$Total.Permanent98, use="pairwise.complete.obs") #.28 for perm
cor(AptsAndFinalRulesWithRINByYear$NumberRules, AptsAndFinalRulesWithRINByYear$CS.Career98, use="pairwise.complete.obs") #.03 for career
save.image("~/TYP/WorkspaceMarch242016.RData")
